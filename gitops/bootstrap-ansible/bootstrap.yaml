---
- name: Setup Cert Manager, OpenShift GitOps and start building applications
  hosts: localhost
  connection: local
  tasks:

  - name: cert-manager namespace 
    kubernetes.core.k8s:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      state: present
      definition:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: cert-manager-operator
        spec: {}

  - name: cert-manager operator group 
    kubernetes.core.k8s:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      state: present
      definition:
        apiVersion: operators.coreos.com/v1
        kind: OperatorGroup
        metadata:
          name: cert-manager-operator-group
          namespace: cert-manager-operator
        spec:
          targetNamespaces:
          - cert-manager-operator
          upgradeStrategy: Default

  - name: cert-manager subscription 
    kubernetes.core.k8s:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      state: present
      definition:
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          name: openshift-cert-manager-operator
          namespace: cert-manager-operator
        spec:
          channel: "{{ cert_manager_channel }}"
          installPlanApproval: Automatic
          name: openshift-cert-manager-operator
          source: "{{ catalogue_source }}"
          sourceNamespace: openshift-marketplace      
      
  - name: GitOps subscription 
    kubernetes.core.k8s:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      state: present
      definition:
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          name: openshift-gitops-operator
          namespace: openshift-operators
        spec:
          channel: "{{ openshift_gitops_channel }}"
          installPlanApproval: Automatic
          name: openshift-gitops-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace    
      
  - name: GitOps cluster-admin CRB 
    kubernetes.core.k8s:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      state: present
      definition:
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: openshift-gitops-cluster-admin
        subjects:
          - kind: ServiceAccount
            name: openshift-gitops-argocd-application-controller
            namespace: openshift-gitops
          - kind: ServiceAccount
            name: openshift-gitops-applicationset-controller
            namespace: openshift-gitops
          - kind: ServiceAccount
            name: openshift-gitops-argocd-server
            namespace: openshift-gitops
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin  
      
  - name: GitOps cluster-manager CRB 
    kubernetes.core.k8s:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      state: present
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: open-cluster-management:cluster-manager-admin-openshift-gitops-argocd-application-controller
          labels:
            app.kubernetes.io/managed-by: gitops-bootstrap
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: open-cluster-management:cluster-manager-admin
        subjects:
        - kind: ServiceAccount
          name: openshift-gitops-argocd-application-controller
          namespace: openshift-gitops

  - name: Wait for the cert-manager Operator to install
    kubernetes.core.k8s_info:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      kind: Deployment
      wait: true
      name: cert-manager
      namespace: cert-manager
      wait_sleep: 5
      wait_timeout: 150

#  - name: Create the CA root certificate 
#    kubernetes.core.k8s:
#      host: "{{ cluster_api_endpoint }}"
#      api_key: "{{ cluster_admin_token }}"
#      ca_cert: "{{ ca_cert_file }}"
#      state: present
#      definition:
#        apiVersion: v1
#        kind: Secret
#        metadata:
#          name: ca-root-secret
#          namespace: cert-manager
#          stringData:
#            tls.key: "{{ lookup('ansible.builtin.file', cert_key_path,rstrip=false) }}"
#            tls.crt: "{{ lookup('ansible.builtin.file', cert_cert_path, rstrip=false) }}"
#
  - name: Delete the CA root certificate 
    ansible.builtin.command: oc -n cert-manager delete secret ca-root-secret

  - name: Create the CA root certificate 
    ansible.builtin.command: oc -n cert-manager create secret generic ca-root-secret --from-file=tls.key={{ cert_key_path }} --from-file=tls.crt={{ cert_cert_path }}

  - name: Create the cluster issuer 
    kubernetes.core.k8s:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      state: present
      definition:
        apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: ca-issuer
        spec:
          ca:
            secretName: ca-root-secret

  - name: Wait for the GitOps Operator to install
    kubernetes.core.k8s_info:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      kind: Deployment
      wait: true
      name: openshift-gitops-server
      namespace: openshift-gitops
      wait_sleep: 5
      wait_timeout: 150

  - name: Create the bootstrap application set 
    kubernetes.core.k8s:
      host: "{{ cluster_api_endpoint }}"
      api_key: "{{ cluster_admin_token }}"
      ca_cert: "{{ ca_cert_file }}"
      state: present
      definition:
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        metadata:
          name: cluster-applications
          namespace: openshift-gitops
        spec:
          destination:
            namespace: openshift-operators
            server: https://kubernetes.default.svc
          project: default
          source:
            directory:
              jsonnet: {}
              recurse: true
            path: gitops/applications
            repoURL: https://github.com/crscottau/openshift-gitops.git
            targetRevision: HEAD
          syncPolicy:
            automated: {}
            syncOptions:
              - CreateNamespace=true 
